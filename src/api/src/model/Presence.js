/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Person from './Person';
import Place from './Place';

/**
 * The Presence model module.
 * @module model/Presence
 * @version v0
 */
class Presence {
    /**
     * Constructs a new <code>Presence</code>.
     * @alias module:model/Presence
     */
    constructor() { 
        
        Presence.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Presence</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Presence} obj Optional instance to populate.
     * @return {module:model/Presence} The populated <code>Presence</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Presence();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('person')) {
                obj['person'] = Person.constructFromObject(data['person']);
            }
            if (data.hasOwnProperty('place')) {
                obj['place'] = Place.constructFromObject(data['place']);
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Date');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Presence</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Presence</code>.
     */
    static validateJSON(data) {
        // validate the optional field `person`
        if (data['person']) { // data not null
          Person.validateJSON(data['person']);
        }
        // validate the optional field `place`
        if (data['place']) { // data not null
          Place.validateJSON(data['place']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
Presence.prototype['id'] = undefined;

/**
 * @member {module:model/Person} person
 */
Presence.prototype['person'] = undefined;

/**
 * @member {module:model/Place} place
 */
Presence.prototype['place'] = undefined;

/**
 * @member {Date} start
 */
Presence.prototype['start'] = undefined;

/**
 * @member {Date} end
 */
Presence.prototype['end'] = undefined;






export default Presence;

